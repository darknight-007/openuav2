FROM nvidia/cudagl:11.4.2-devel-ubuntu20.04

ARG SOURCEFORGE=https://sourceforge.net/projects
ARG TURBOVNC_VERSION=2.1.2
ARG VIRTUALGL_VERSION=2.6.2
ARG LIBJPEG_VERSION=1.5.2
ARG WEBSOCKIFY_VERSION=0.8.0
ARG NOVNC_VERSION=1.0.0

# Install Ubuntu, VirtualGl, miniconda and novnc in one docker layer
RUN apt-get update --allow-insecure-repositories && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends --allow-unauthenticated \
    ca-certificates curl wget apt-utils python3-pip vim less lsof net-tools git htop gedit gedit-plugins \
    libglib2.0-0 libxext6 libsm6 libxrender1 unzip zip psmisc xz-utils \
    python3-dev libsuitesparse-dev libeigen3-dev libxv1:i386 libglu1-mesa:i386 libsdl1.2-dev doxygen \
    gcc libc6-dev libglu1 libxv1 \
    xfce4 xfce4-terminal xfce4-goodies xvfb terminator zenity mesa-utils \
    make cmake python x11-xkb-utils xauth xfonts-base xkb-data locales && \
    rm -rf /var/lib/apt/lists/* && \
    cd /tmp && \
    curl -fsSL -O ${SOURCEFORGE}/turbovnc/files/${TURBOVNC_VERSION}/turbovnc_${TURBOVNC_VERSION}_amd64.deb \
        -O ${SOURCEFORGE}/libjpeg-turbo/files/${LIBJPEG_VERSION}/libjpeg-turbo-official_${LIBJPEG_VERSION}_amd64.deb \
        -O ${SOURCEFORGE}/virtualgl/files/${VIRTUALGL_VERSION}/virtualgl_${VIRTUALGL_VERSION}_amd64.deb \
        -O ${SOURCEFORGE}/virtualgl/files/${VIRTUALGL_VERSION}/virtualgl32_${VIRTUALGL_VERSION}_amd64.deb && \
    dpkg -i *.deb && \
    rm -f /tmp/*.deb && \
    sed -i 's/$host:/unix:/g' /opt/TurboVNC/bin/vncserver

# Install noVNC
RUN cd /tmp && \
    curl -fsSL https://github.com/novnc/noVNC/archive/v${NOVNC_VERSION}.tar.gz | tar -xzf - -C /opt && \
    curl -fsSL https://github.com/novnc/websockify/archive/v${WEBSOCKIFY_VERSION}.tar.gz | tar -xzf - -C /opt && \
    mv /opt/noVNC-${NOVNC_VERSION} /opt/noVNC && \
    chmod -R a+w /opt/noVNC && \
    mv /opt/websockify-${WEBSOCKIFY_VERSION} /opt/websockify && \
    cd /opt/websockify && make && \
    cd /opt/noVNC/utils && \
    ln -s /opt/websockify

ENV PATH="${PATH}:/opt/VirtualGL/bin"

# Configure XFCE and VNC
RUN mkdir -p /root/.config/xfce4/xfconf/xfce-perchannel-xml && \
    echo '<?xml version="1.0" encoding="UTF-8"?>\n\
<channel name="xfce4-session" version="1.0">\n\
  <property name="general" type="empty">\n\
    <property name="AutostartDelay" type="int" value="0"/>\n\
  </property>\n\
  <property name="shutdown" type="empty">\n\
    <property name="LockScreen" type="bool" value="false"/>\n\
  </property>\n\
</channel>' > /root/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-session.xml

# Setup VNC startup
RUN mkdir -p /root/.vnc && \
    echo '#!/bin/bash\n\
unset SESSION_MANAGER\n\
unset DBUS_SESSION_BUS_ADDRESS\n\
exec startxfce4' > /root/.vnc/xstartup.turbovnc && \
    chmod +x /root/.vnc/xstartup.turbovnc

# Expose noVNC port
EXPOSE 40001

# Configure terminator with vglrun
RUN mkdir -p /root/Desktop && \
    mkdir -p /root/.config/terminator && \
    perl -pi -e 's/^Exec=terminator$/Exec=terminator -e "vglrun bash"/g' /usr/share/applications/terminator.desktop && \
    echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && \
    locale-gen && \
    printf "%s\n" \
           "export LC_ALL=en_US.UTF-8" \
           "export LANG=en_US.UTF-8" \
           "export LANGUAGE=en_US.UTF-8" >> /root/.bashrc

# Generate self-signed certificate for noVNC
RUN openssl req -new -x509 -days 365 -nodes -out /root/self.pem -keyout /root/self.pem \
    -subj "/C=US/ST=State/L=City/O=Organization/CN=localhost"

# Copy configuration files
COPY xorg.conf /etc/X11/xorg.conf
COPY terminator.desktop /root/Desktop/
COPY ./terminator_config /root/.config/terminator/config
COPY start_desktop.sh /usr/local/bin/start_desktop.sh
RUN chmod +x /usr/local/bin/start_desktop.sh

CMD ["/usr/local/bin/start_desktop.sh"]
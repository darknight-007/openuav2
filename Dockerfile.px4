FROM nvidia/cudagl:11.4.2-devel-ubuntu20.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    NVIDIA_VISIBLE_DEVICES=1 \
    NVIDIA_DRIVER_CAPABILITIES=all \
    VGL_DISPLAY=/dev/dri/card1 \
    __NV_PRIME_RENDER_OFFLOAD=1 \
    __GLX_VENDOR_LIBRARY_NAME=nvidia \
    GAZEBO_GPU_RAY_TEXTURE_SIZE=2048

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl wget git build-essential \
    python3-pip ipython3 vim less \
    mesa-utils libgl1-mesa-glx libglu1-mesa xauth x11-utils xorg \
    xfce4 xfce4-terminal \
    firefox dbus-x11 \
    python3-websockify novnc \
    nvidia-cuda-toolkit \
    vulkan-tools \
    && rm -rf /var/lib/apt/lists/*

# Install VirtualGL dependencies
RUN apt-get update && apt-get install -y \
    libegl1-mesa \
    libegl1-mesa-dev \
    libglu1-mesa \
    libglu1-mesa-dev \
    libgl1-mesa-glx \
    libgl1-mesa-dev \
    && rm -rf /var/lib/apt/lists/*

# Install TurboVNC and VirtualGL
RUN wget https://sourceforge.net/projects/turbovnc/files/3.0.3/turbovnc_3.0.3_amd64.deb && \
    wget https://sourceforge.net/projects/virtualgl/files/3.1/virtualgl_3.1_amd64.deb && \
    apt-get update && \
    dpkg -i turbovnc_3.0.3_amd64.deb virtualgl_3.1_amd64.deb || true && \
    apt-get -f install -y && \
    dpkg -i turbovnc_3.0.3_amd64.deb virtualgl_3.1_amd64.deb && \
    rm turbovnc_3.0.3_amd64.deb virtualgl_3.1_amd64.deb && \
    rm -rf /var/lib/apt/lists/*

# Install ROS Foxy
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null && \
    apt-get update && apt-get install -y --no-install-recommends \
    ros-foxy-desktop \
    ros-foxy-gazebo-ros-pkgs \
    ros-foxy-gazebo-ros2-control \
    python3-rosdep \
    python3-colcon-common-extensions \
    && rm -rf /var/lib/apt/lists/* \
    && rosdep init \
    && rosdep update

# Install PX4 dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    ninja-build \
    protobuf-compiler \
    libeigen3-dev \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    python3-jinja2 \
    python3-numpy \
    python3-yaml \
    python3-packaging \
    python3-pip \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good \
    libeigen3-dev \
    libgazebo11-dev \
    libopencv-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
RUN pip3 install --no-cache-dir \
    kconfiglib \
    future \
    pyros-genmsg \
    jsonschema \
    numpy \
    toml \
    jinja2 \
    pyyaml \
    cerberus \
    packaging \
    numpy \
    pyulog \
    pandas \
    pyserial \
    pyargparse \
    coverage \
    setuptools \
    wheel \
    requests

# Clone and build PX4-Autopilot
RUN git clone https://github.com/PX4/PX4-Autopilot.git --recursive /root/PX4-Autopilot && \
    cd /root/PX4-Autopilot && \
    git checkout v1.13.3 && \
    git submodule sync --recursive && \
    git submodule update --init --recursive && \
    DONT_RUN=1 make px4_sitl_default gazebo

# Setup environment
RUN echo "source /opt/ros/foxy/setup.bash" >> /root/.bashrc && \
    echo "source /root/PX4-Autopilot/Tools/setup_gazebo.bash /root/PX4-Autopilot /root/PX4-Autopilot/build/px4_sitl_default" >> /root/.bashrc && \
    echo "export ROS_DOMAIN_ID=0" >> /root/.bashrc && \
    echo "export PX4_HOME_LAT=40.4432" >> /root/.bashrc && \
    echo "export PX4_HOME_LON=-79.9428" >> /root/.bashrc && \
    echo "export PX4_HOME_ALT=0.0" >> /root/.bashrc

# Install XFCE and desktop environment dependencies
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    xorg \
    xserver-xorg \
    xserver-xorg-video-nvidia-470 \
    nvidia-driver-470 \
    mesa-utils \
    x11-xserver-utils \
    xinit \
    xfce4 \
    xfce4-terminal \
    xfce4-goodies \
    xfce4-panel \
    xfce4-session \
    xfce4-settings \
    xfdesktop4 \
    xfwm4 \
    thunar \
    dbus \
    dbus-x11 \
    x11vnc \
    novnc \
    net-tools \
    psmisc \
    pulseaudio \
    qt5-default \
    qtbase5-dev \
    qtdeclarative5-dev \
    qml-module-qtquick2 \
    qml-module-qtquick-controls2 \
    qml-module-qtquick-layouts \
    && rm -rf /var/lib/apt/lists/*

# Install additional Gazebo and Qt dependencies
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    libgstreamer-plugins-good1.0-dev \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav \
    libgstrtspserver-1.0-dev \
    qtwayland5 \
    qt5-qmltooling-plugins \
    && rm -rf /var/lib/apt/lists/*

# Configure VirtualGL and TurboVNC
RUN mkdir -p /etc/turbovncserver-security.conf.d && \
    echo "no-remote-connections" > /etc/turbovncserver-security.conf.d/00-no-remote-connections && \
    echo "no-httpd" > /etc/turbovncserver-security.conf.d/01-no-httpd && \
    echo "no-x11-tcp-connections" > /etc/turbovncserver-security.conf.d/02-no-x11-tcp-connections && \
    echo "permitted-security-types = None, VNC, Plain, TLSNone, TLSVnc, TLSPlain" > /etc/turbovncserver-security.conf.d/03-permitted-security-types

# Copy configuration files
COPY xorg.conf /etc/X11/xorg.conf
COPY start_desktop.sh /usr/local/bin/start_desktop.sh
RUN chmod +x /usr/local/bin/start_desktop.sh

# Create required directories and set permissions
RUN mkdir -p /var/run/dbus && \
    mkdir -p /root/.vnc && \
    mkdir -p /root/.config/plasma-workspace/env && \
    mkdir -p /root/.cache && \
    chmod 777 /tmp && \
    chmod -R 777 /root/.cache

# Set environment variables for GPU and Qt
ENV NVIDIA_VISIBLE_DEVICES=all \
    NVIDIA_DRIVER_CAPABILITIES=all \
    __NV_PRIME_RENDER_OFFLOAD=1 \
    __GLX_VENDOR_LIBRARY_NAME=nvidia \
    QT_X11_NO_MITSHM=1

# Set the entrypoint
ENTRYPOINT ["/usr/local/bin/start_desktop.sh"]
